1) When would you want to use a remote repository rather than keeping all your work local?

When you need to keep data safe and keep a history for changes.

2) Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because the remote repository could have some changes that you don't need to merge with yours. 

3) Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Fork you use when you would like to take some code and use, change and you don't think in share your progress to author.
	Clone you could help and share your modifications with the author.
	Branches you use to make some changes like fixes or different versions of the same project.

4) What is the benefit of having a copy of the last known state of the remote stored locally?

	You can improve the code, try some refactorings without worrying about damage the code.

5) How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	Using another version control or separating the development in different modules for each developer. 
	Some concepts from git are harder to understand but I think it's easier than other version control 
	when you have some experience.
	

6) When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	Everytime I'm working in a new feature or a change that could break the master code.
